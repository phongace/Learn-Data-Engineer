version: "3.8"

services:
  kafka-1:
    image: bitnami/kafka:latest
    container_name: kafka-1
    restart: unless-stopped
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "9092:9092"

  kafka-producer:
    build: ./kafka-producer
    container_name: kafka-producer
    depends_on:
      - kafka-1

  spark-1:
    image: bitnami/spark:latest
    container_name: spark-1
    restart: unless-stopped
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - spark_data:/bitnami/spark

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    restart: unless-stopped
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-1:7077
    depends_on:
      - spark-1
    volumes:
      - spark_worker_data:/bitnami/spark

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   restart: unless-stopped
  #   ports:
  #     - "8085:8080"
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=kraft-cluster
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092
  #   depends_on:
  #     - kafka-1

  api:
    build: ./api
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      - kafka-1
      - spark-1
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - GOOGLE_CLOUD_PROJECT=learn-data-engineer-457903

volumes:
  kafka_data:
  spark_data:
  spark_worker_data:
